# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023-2025 Univention GmbH

---
# Default values for univention-management-console-gateway
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global values
affinity: {}
environment: {}
fullnameOverride: ""
mountUcr: true
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
replicaCount: 1
tolerations: []

# -- Additional custom labels to add to all deployed objects.
additionalLabels: {}

global:
  # -- Indicates wether this chart is part of a Nubus deployment.
  nubusDeployment: false
  # -- Container registry address.
  imageRegistry: "artifacts.software-univention.de"
  # -- ConfigMap name to read UCR values from.
  configMapUcr: null

  # -- Allows to configure extensions globally.
  extensions: []
  # -- Allows to configure system extensions globally.
  systemExtensions: []
  domain: ""
  subDomains:
    portal: "portal"
    keycloak: "id"

# -- Extensions to load. This will override the configuration in
# `global.extensions`.
extensions: []

# -- Allows to configure the system extensions to load. This is intended for
# internal usage, prefer to use `extensions` for user configured extensions.
# This value will override the configuration in `global.systemExtensions`.
systemExtensions: []

# Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
containerSecurityContext:
  privileged: false
  # -- Enable container privileged escalation.
  allowPrivilegeEscalation: false
  # -- Security capabilities for container.
  capabilities:
    drop:
      - "ALL"
  # -- Enable security context.
  enabled: true
  # -- Process user id.
  runAsUser: 1000
  # -- Process group id.
  runAsGroup: 1000
  # Set Seccomp profile.
  seccompProfile:
    # -- Disallow custom Seccomp profile by setting it to RuntimeDefault.
    type: "RuntimeDefault"
  # -- Mounts the container's root filesystem as read-only.
  readOnlyRootFilesystem: true
  # -- Run container as a user.
  runAsNonRoot: true

# Pod Security Context.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
podSecurityContext:
  # -- Enable security context.
  enabled: true

  # -- If specified, all processes of the container are also part of the supplementary group.
  fsGroup: 1000

  # -- Change ownership and permission of the volume before being exposed inside a Pod.
  fsGroupChangePolicy: "Always"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  ## @param serviceAccount.automountServiceAccountToken Allows auto mount of ServiceAccountToken on the serviceAccount created
  ## Can be set to false if pods using this serviceAccount do not need to use K8s API
  ##
  automountServiceAccountToken: false
  # -- Additional custom labels for the ServiceAccount.
  labels: {}

## Kubernetes ingress
ingress:
  # -- Enable creation of Ingress.
  enabled: true

  # -- Define the Fully Qualified Domain Name (FQDN) where application should be reachable.
  host: ""

  # Request certificates via cert-manager.io annotation
  certManager:
    # -- Enable cert-manager.io annotaion.
    enabled: true

    # Issuer reference.
    issuerRef:
      # -- Name of cert-manager.io Issuer resource.
      name: ""
      # -- Type of Issuer, f.e. "Issuer" or "ClusterIssuer".
      kind: "ClusterIssuer"

  # -- The Ingress controller class name.
  ingressClassName: ""

  # -- Define ingress annotations.
  annotations:
    nginx.ingress.kubernetes.io/use-regex: "true"
    nginx.ingress.kubernetes.io/affinity: "none"
    nginx.ingress.kubernetes.io/rewrite-target: "/$2$3"

  # -- Define the Ingress paths.
  paths:
    - path: /()(univention/)(languages.json|meta.json|theme.css)$
      pathType: ImplementationSpecific
    - path: /()(univention/)((js|management|themes)/.*)$
      pathType: ImplementationSpecific
    - path: /()(univention/login/)(dialog.js|main.js|LoginDialog.js|i18n/en/main.json)$
      pathType: ImplementationSpecific

  # -- Enable plain UMC login path (non IdP). Defaults to false.
  enableLoginPath: ""
  loginPath:
    - path: /()(univention/)(login/.*)$
      pathType: ImplementationSpecific

  # -- Secure an Ingress by specifying a Secret that contains a TLS private key and certificate.
  #
  # Ref.: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  tls:
    # -- Enable TLS/SSL/HTTPS for Ingress.
    enabled: true

    # -- The name of the kubernetes secret which contains a TLS private key and certificate.
    # Hint: This secret is not created by this chart and must be provided.
    secretName: ""


## Docker image
image:
  registry: ""
  repository: "nubus-dev/images/umc-gateway"
  imagePullPolicy: null
  tag: "latest"
  ## Define image sha256 as an alternative to `tag`
  # sha256:


## Container deployment probes
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 10
    timeoutSeconds: 3
    periodSeconds: 30
    failureThreshold: 3
    successThreshold: 1

  readiness:
    enabled: true
    initialDelaySeconds: 10
    timeoutSeconds: 3
    periodSeconds: 15
    failureThreshold: 30
    successThreshold: 1


## Deployment resources
resources: {}

initResources: {}


## Kubernetes Service
service:
  enabled: true
  type: "ClusterIP"
  ports:
    http:
      containerPort: 8080
      port: 80
      protocol: "TCP"

  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800

# Set up update strategy.
#
# Ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
#
# Example:
# updateStrategy:
#  type: RollingUpdate
#  rollingUpdate:
#    maxSurge: 25%
#    maxUnavailable: 25%
updateStrategy:
  # -- Set to Recreate if you use persistent volume that cannot be mounted by more than one pods to make sure the pods
  # are destroyed first.
  type: "RollingUpdate"
