---
# Default values for univention-management-console-server
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

## Global values
affinity: {}
environment: {}
fullnameOverride: ""
mountSecrets: true
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
securityContext: {}
tolerations: []


# -- Application configuration of the Univention Management Console Server
umcServer:
  # -- Domain name of the instance.
  # Example: `example.org`
  domainname: null
  # -- Host name of the instance.
  # Example: `souvap`
  hostname: null
  # -- Hostname of the LDAP server.
  # Example: `"ucs-1234.univention.intranet"`
  ldapHost: null
  # -- IP address of the LDAP server.
  # (This is necessary to allow resolving the LDAP fqdn and pass the certificate checks.)
  # Example: `"10.200.0.1"`
  ldapHostIp: null
  # -- Port to connect to the LDAP server.
  ldapPort: "389"
  # -- Base DN of the LDAP directory.
  # Example: `"dc=example,dc=org"`
  ldapBaseDn: null
  # -- DN of the UMC instance.
  # Example: `"cn=ucs-1234,cn=dc,cn=computers,dc=example,dc=org"`
  ldapHostDn: null
  # -- Debug level of the UMC server.
  # (1 = errors only, 99 = most verbose)
  debugLevel: "5"
  # -- Whether the UMC login cookie will be limited to the browser session (boolean).
  enforceSessionCookie: "true"
  # -- IP ranges for which session client IP address checks are disabled (string, comma-separated).
  # Setting it to `0.0.0.0/0,::/0` to effectively disables the session-to-IP-address binding.
  localIpRanges: "0.0.0.0/0,::/0"
  # -- Allows to switch off SAML support.
  samlEnabled: true
  # -- SAML Identity Provider metadata URL (as visible from the user/internet).
  # Example: `"https://id.souvap.example.org/realms/ucs/protocol/saml/descriptor"`
  samlMetadataUrl: null
  # -- SAML Identity Provider metadata URL (as visible from inside the container), optional.
  # Example: `"http://keycloak:8080/realms/ucs/protocol/saml/descriptor"`
  samlMetadataUrlInternal: ""
  # -- SAML Service Provider (hostname and port).
  # Example: `souvap.example.org`
  samlSpServer: null
  # -- Which address scheme to consider for SAML ACS (string, comma-separated).
  # Example: `"https, http"`
  samlSchemes: "https"

  # -- Set desired TLS mode.
  # Options: `"secure"`, `"unvalidated"`, `"off"`.
  tlsMode: "secure"
  # -- Path to file with the LDAP secret.
  ldapSecretFile: "/var/secrets/ldap_secret"
  # -- Path to file with the LDAP machine secret.
  machineSecretFile: "/var/secrets/machine_secret"
  # -- Path to file with the CA certificate.
  caCertFile: "/var/secrets/ca_cert"
  # -- Path to file with the certificate (.pem).
  certPemFile: "/var/secrets/cert_pem"
  # -- Path to file with the certificate's private key (.key).
  privateKeyFile: "/var/secrets/private_key"


## Kubernetes ingress
ingress:
  # -- Set this to `true` in order to enable the installation on Ingress related objects.
  enabled: true
  ingressClassName: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: "/$1"
    nginx.ingress.kubernetes.io/use-regex: "true"
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  # -- The path configuration. The default only grabs what is handled by the UMC server.
  paths:
    - pathType: Prefix
      path: /univention/((?:auth|saml|get|set|command|upload|logout)(?:$|/.*))
  tls:
    enabled: true
    secretName: ""


## Istio support
istio:
  # -- Set this to `true` in order to enable the installation on Istio related objects.
  enabled: false
  # -- The hostname. This parameter has to be supplied. Example `portal.example`.
  host: null
  virtualService:
    enabled: true
    annotations: {}
    # -- The paths configuration.
    # The default only grabs what is known to be handled by the UMC server.
    paths:
      - match: "prefix"
        path: "/univention/auth/"
        rewrite: "/auth/"
      - match: "prefix"
        path: "/univention/saml/"
        rewrite: "/saml/"
      - match: "prefix"
        path: "/univention/get/"
        rewrite: "/get/"
      - match: "prefix"
        path: "/univention/set/"
        rewrite: "/set/"
      - match: "prefix"
        path: "/univention/command/"
        rewrite: "/command/"
      - match: "prefix"
        path: "/univention/upload/"
        rewrite: "/upload/"
      - match: "prefix"
        path: "/univention/logout/"
        rewrite: "/logout/"
  gateway:
    enabled: false
    annotations:
    selectorIstio: "ingressgateway"
    externalGatewayName: "swp-istio-gateway"
    tls:
      enabled: true
      httpsRedirect: true
      secretName: ""


## Docker image
image:
  registry: "registry.souvap-univention.de"
  repository: "souvap/tooling/images/univention-management-console/umc-server"
  imagePullPolicy: "Always"
  tag: "latest"

  ## Define image sha256 as an alternative to `tag`
  # sha256:


## Container deployment probes
probes:
  liveness:
    enabled: true
    initialDelaySeconds: 120
    timeoutSeconds: 3
    periodSeconds: 30
    failureThreshold: 3
    successThreshold: 1

  readiness:
    enabled: true
    initialDelaySeconds: 30
    timeoutSeconds: 3
    periodSeconds: 15
    failureThreshold: 30
    successThreshold: 1


## Deployment resources
resources:
  requests:
    memory: "512Mi"
    cpu: "250m"
  limits:
    memory: "4Gi"
    cpu: "4"

## Kubernetes Service
service:
  enabled: true
  type: "ClusterIP"
  ports:
    http:
      containerPort: 8090
      port: 80
      protocol: "TCP"

  sessionAffinity:
    enabled: false
    timeoutSeconds: 10800

# serviceAccount:
#   # Specifies whether a service account should be created
#   create: true
#   # Annotations to add to the service account
#   annotations: {}
#   # The name of the service account to use.
#   # If not set and create is true, a name is generated using the fullname template
#   name: ""

autoscaling:
  enabled: false

...
