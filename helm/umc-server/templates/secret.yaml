# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023 Univention GmbH

---
{{- /*
Generate a self-signed certificate for the SAML message signing if none is provided.

TODO: This has the drawback of generating a new certificate on every run of
"helm upgrade". There is a pending refactoring to move the SAML certificate and
also the optional additional CA Certificate into separate Secrets. Then the
"lookup" function of Helm can be used to avoid re-generating the certificate.

*/}}
{{- if not (or .Values.umcServer.certPem .Values.umcServer.privateKey) }}
{{- $cert := genSelfSignedCert "saml" nil nil 365 }}
{{- $_ := set .Values.umcServer "certPem" $cert.Cert }}
{{- $_ := set .Values.umcServer "privateKey" $cert.Key }}
{{- end }}

{{ include "common.secret" (dict "top" . "overrides" "umc-server.secret") }}

{{- define "umc-server.secret" }}
{{- with .top }}
stringData:
  ldap_secret: {{ .Values.umcServer.ldapSecret | quote }}
  machine_secret: {{ .Values.umcServer.machineSecret | quote }}
  ca_cert: {{ .Values.umcServer.caCert | quote }}
  cert_pem: {{ .Values.umcServer.certPem | quote }}
  private_key: {{ .Values.umcServer.privateKey | quote }}
  db_password: {{ .Values.postgresql.auth.password | quote }}
  memcached_password: {{ .Values.memcached.auth.password | quote }}
  smtp_password: {{ .Values.umcServer.smtpSecret | quote }}
{{- end }}
{{- end }}
