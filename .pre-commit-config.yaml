# SPDX-License-Identifier: AGPL-3.0-only
# SPDX-FileCopyrightText: 2023-2025 Univention GmbH

---
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks

repos:
  # "Copy .env.umc-*.examples so that docker-compose.yaml can be linted"
  - repo: "local"
    hooks:
      - id: "copy-umc-gateway"
        name: "copy-umc-gateway"
        entry: "sh -c 'if [ ! -f .env.umc-gateway ]; then cp .env.umc-gateway.example .env.umc-gateway; fi'"
        language: "system"
        files: "docker-compose.yaml"
        pass_filenames: false
      - id: "copy-umc-server"
        name: "copy-umc-server"
        entry: "sh -c 'if [ ! -f .env.umc-server ]; then cp .env.umc-server.example .env.umc-server; fi'"
        language: "system"
        files: "docker-compose.yaml"
        pass_filenames: false

  - repo: "https://github.com/pre-commit/pre-commit-hooks"
    rev: "v4.5.0"
    hooks:
      # "check for added large files"
      - id: "check-added-large-files"
      # "check for merge conflicts"
      - id: "check-merge-conflict"
      # "check yaml"
      - id: "check-yaml"
        args:
          - "--allow-multiple-documents"
        exclude: ^helm/.+/templates/
      # "fix end of files"
      - id: "end-of-file-fixer"
        exclude: ^helm/.+/README.md|.*\.patch
      # "fix python encoding pragma"
      - id: "fix-encoding-pragma"
      # "trim trailing whitespace"
      - id: "trailing-whitespace"
        exclude: .*\.patch

  - repo: "https://git.knut.univention.de/univention/dist/pre-commit-ucr"
    rev: "0.0.10"
    hooks:
      # "flake8 --select E1,E2 for UCR templates"
      - id: "ucr-flake8"
      # "ruff for UCR templates"
      - id: "ucr-ruff"
      # "autopep8 --select E1,E2 for UCR templates"
      - id: "ucr-autopep8"
        stages: ["manual"]
      # "ruff --fix for UCR templates"
      - id: "ucr-ruff-fix"
        stages: ["manual"]

  - repo: "https://github.com/compilerla/conventional-pre-commit"
    rev: "v3.0.0"
    hooks:
      - id: "conventional-pre-commit"
        stages: ["commit-msg"]

  - repo: "https://git.knut.univention.de/univention/dist/pre-commit-debian.git"
    rev: "v1.1.0"
    hooks:
      # "Debian control file formatter"
      - id: "debian-control"

  - repo: "https://github.com/charliermarsh/ruff-pre-commit"
    rev: "v0.1.9"
    hooks:
      # "ruff"
      - id: "ruff"
        alias: "ruff-main"
        # "ruff"
      - id: "ruff"
        alias: "ruff-fix"
        stages: ["manual"]
        args: ["--fix"]

  # This is a wrapper for shellcheck as long as
  # shellcheck doesn't have it's own .pre-commit-hooks.yaml
  # https://github.com/koalaman/shellcheck/pull/1032
  - repo: "https://gitlab.com/univention/pre-commit-hooks/pre-commit-shell"
    rev: "v1.0.6+uv1"
    hooks:
      # "Shell Syntax Check"
      - id: "shell-lint"

  # "docker-compose.yaml linter"
  - repo: "https://gitlab.com/univention/pre-commit-hooks/docker-compose-check"
    rev: "7702a8801a158b8595569dd29e2dd655d8a08310"
    hooks:
      - id: "docker-compose-check"

  # "Dockerfile linter"
  - repo: https://gitlab.com/univention/pre-commit-hooks/docker-pre-commit
    rev: v2.0.0
    hooks:
      - id: hadolint-system

  # "Helm chart linter"
  - repo: https://github.com/gruntwork-io/pre-commit
    rev: v0.1.23
    hooks:
      - id: helmlint

  # "Helm docs linter"
  - repo: https://github.com/norwoodj/helm-docs
    rev: v1.12.0
    hooks:
      - id: helm-docs
        args:
          - --chart-search-root=helm
          - --template-files=README.md.gotmpl
        always_run: true

  - repo: "https://git.knut.univention.de/univention/dist/pre-commit-hooks/addlicense"
    rev: "v1.0.1"
    hooks:
      - id: "addlicense"
        name: "Check or add license headers to files"

  - repo: "https://git.knut.univention.de/univention/customers/dataport/upx/kyverno-test-pre-commit"
    rev: "v0.2.0"
    hooks:
      - id: "kyverno-test"

...
