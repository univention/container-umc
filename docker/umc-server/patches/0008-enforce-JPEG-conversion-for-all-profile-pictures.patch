From 0de9b343403a9868f61aed7db9d82e3490bf2ca0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Carlos=20Garc=C3=ADa-Mauri=C3=B1o?=
 <garcia-maurino@univention.de>
Date: Thu, 12 Sep 2024 14:30:04 +0200
Subject: [PATCH 8/8] enforce JPEG conversion for all profile pictures

https://git.knut.univention.de/univention/customers/dataport/team-souvap/-/issues/439
---
 .../modules/univention/admin/syntax.py        | 35 +++++++++----------
 1 file changed, 16 insertions(+), 19 deletions(-)

diff --git management/univention-directory-manager-modules/modules/univention/admin/syntax.py management/univention-directory-manager-modules/modules/univention/admin/syntax.py
index c9d5b0af6c1..d143637d67e 100644
--- management/univention-directory-manager-modules/modules/univention/admin/syntax.py
+++ management/univention-directory-manager-modules/modules/univention/admin/syntax.py
@@ -1409,25 +1409,22 @@ class jpegPhoto(Upload):
     def parse(self, text):
         try:
             raw = base64.b64decode(text)
-            if raw.startswith(b'\211PNG\r\n\032\n'):  # PNG
-                # convert from PNG to JPEG
-                try:
-                    fp = BytesIO(raw)
-                    text = BytesIO()
-                    image = PIL.Image.open(fp)
-                    image = image.convert('RGB')
-
-                    def _fileno(*a, **k):
-                        raise AttributeError()  # workaround for an old PIL lib which can't handle BytesIO
-                    text.fileno = _fileno
-                    image.save(text, format='jpeg')
-                    raw = text.getvalue()
-                    text = base64.b64encode(raw)
-                except (OSError, KeyError, IndexError):
-                    log.warning('Failed to convert PNG file into JPEG: %s', traceback.format_exc())
-                    raise univention.admin.uexceptions.valueError(_('Failed to convert PNG file into JPEG format.'))
-            if raw[:2] != b'\xff\xd8' and raw[6:10] not in (b'JFIF', b'Exif'):
-                raise ValueError()
+            # Always convert to JPEG, regardless of input format
+            try:
+                fp = BytesIO(raw)
+                output = BytesIO()
+                image = PIL.Image.open(fp)
+                image = image.convert('RGB')
+    
+                def _fileno(*a, **k):
+                    raise AttributeError()  # workaround for an old PIL lib which can't handle BytesIO
+                output.fileno = _fileno
+                image.save(output, format='JPEG')
+                raw = output.getvalue()
+                text = base64.b64encode(raw)
+            except (OSError, KeyError, IndexError):
+                log.warning('Failed to convert image to JPEG: %s', traceback.format_exc())
+                raise univention.admin.uexceptions.valueError(_('Failed to convert image to JPEG format.'))
             return text
         except (base64.binascii.Error, ValueError, TypeError):
             raise univention.admin.uexceptions.valueError(_('Value must be Base64 encoded jpeg.'))
-- 
2.39.2

